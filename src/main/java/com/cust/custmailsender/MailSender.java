/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.cust.custmailsender;

import com.cust.mailsender.controller.EmailSenderController;
import com.cust.persistance.CustServiceConstants;
import com.cust.persistance.PersistanceManager;
import com.cust.persistance.managers.LoginManager;
import com.inder.customcomponents.CustomButton;
import java.awt.Font;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.html.HTMLEditorKit;

/**
 *
 * @author Zed
 */
public class MailSender extends javax.swing.JFrame {

    /**
     * Creates new form MailSender
     */
    EmailSenderController emailSenderController;
    public ToCCHelp toCCHelp;

    public MailSender() {
        initComponents();
        init();
    }

    private void init() {
        emailSenderController = new EmailSenderController();
        toHelp.addActionListener(emailSenderController);
        ccHelp.addActionListener(emailSenderController);
        bccHelp.addActionListener(emailSenderController);
        sendEmail.addActionListener(emailSenderController);
        fileButton.addActionListener(emailSenderController);
        
        copyButton.addActionListener(emailSenderController);
        cutButton.addActionListener(emailSenderController);
        pasteButton.addActionListener(emailSenderController);

        toTextField.setAllowCommaSemiColon(true);
        sendEmail.addActionListener(emailSenderController);
        cancelEmail.addActionListener(emailSenderController);
        ccTextField.setAllowEmailSymbol(true);
        ccTextField.setAllowDot(true);
        bccTextField.setAllowEmailSymbol(true);
        bccTextField.setAllowDot(true);

        toCCHelp = new ToCCHelp();
        toCCHelp.toCcOKButton.addActionListener(emailSenderController);
        toCCHelp.toCcCancelButton.addActionListener(emailSenderController);
        PersistanceManager.getInstance().setLoginServer(CustServiceConstants.URL);
        LoginManager loginManager = new LoginManager();
        loginManager.getPreferenceList();
        if (PersistanceManager.getInstance().getPreferenceVO() == null) {
            errorLabel.setText("Init Failed... Mailing will not work..");
            return;
        }
        emailSenderController.setMailSender(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel2 = new javax.swing.JLabel();
        subTextField = new com.inder.customcomponents.ITextField(100);
        jLabel3 = new javax.swing.JLabel();
        sendEmail = new com.inder.customcomponents.CustomButton();
        cancelEmail = new com.inder.customcomponents.CustomButton();
        toHelp = new com.inder.customcomponents.CustomButton();
        errorLabel = new javax.swing.JLabel();
        ccHelp = new com.inder.customcomponents.CustomButton();
        bccHelp = new com.inder.customcomponents.CustomButton();
        ccTextField = new com.inder.customcomponents.IEmailTextField(10000);
        bccTextField = new com.inder.customcomponents.IEmailTextField(10000);
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageEditorPane = new javax.swing.JEditorPane();
        jToolBar1 = new javax.swing.JToolBar();
        cutButton = new CustomButton(new HTMLEditorKit.CutAction());
        copyButton = new CustomButton(new HTMLEditorKit.CopyAction());
        pasteButton = new CustomButton(new HTMLEditorKit.PasteAction());
        boldButton = new CustomButton(new HTMLEditorKit.BoldAction());
        underlineButton = new CustomButton(new HTMLEditorKit.UnderlineAction());
        ItalicButton = new CustomButton(new HTMLEditorKit.ItalicAction());
        fontSizeButton = new CustomButton(new HTMLEditorKit.FontSizeAction("16", 16));
        justifyButton = new CustomButton(new StyledEditorKit.AlignmentAction("Justify", StyleConstants.ALIGN_JUSTIFIED));
        fileButton = new com.inder.customcomponents.CustomButton();
        toTextField = new com.inder.customcomponents.IEmailTextField(10000);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Elegant Marketing Email Sender");
        setMinimumSize(new java.awt.Dimension(400, 300));
        setPreferredSize(new java.awt.Dimension(600, 600));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Subject");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(subTextField, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Message");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jLabel3, gridBagConstraints);

        sendEmail.setText("Send Mail");
        sendEmail.setActionCommand("send");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        getContentPane().add(sendEmail, gridBagConstraints);

        cancelEmail.setText("Cancel");
        cancelEmail.setActionCommand("cancel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 11;
        getContentPane().add(cancelEmail, gridBagConstraints);

        toHelp.setText("To");
        toHelp.setActionCommand("tohelp");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(toHelp, gridBagConstraints);

        errorLabel.setForeground(new java.awt.Color(255, 51, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(errorLabel, gridBagConstraints);

        ccHelp.setText("CC");
        ccHelp.setActionCommand("cchelp");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(ccHelp, gridBagConstraints);

        bccHelp.setText("BCC");
        bccHelp.setActionCommand("bcchelp");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(bccHelp, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(ccTextField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(bccTextField, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        messageEditorPane.setContentType("text/html"); // NOI18N
        messageEditorPane.setFont(new Font("Arial", Font.PLAIN, 20));
        messageEditorPane.setDragEnabled(true);
        messageEditorPane.setDropMode(javax.swing.DropMode.INSERT);
        jScrollPane1.setViewportView(messageEditorPane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jToolBar1.setRollover(true);

        cutButton.setText("Cut");
        cutButton.setFocusable(false);
        cutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cutButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(cutButton);

        copyButton.setText("Copy");
        copyButton.setFocusable(false);
        copyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        copyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(copyButton);

        pasteButton.setText("Paste");
        pasteButton.setFocusable(false);
        pasteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pasteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(pasteButton);

        boldButton.setText("Bold");
        boldButton.setFocusable(false);
        boldButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        boldButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(boldButton);

        underlineButton.setText("UnderLine");
        underlineButton.setFocusable(false);
        underlineButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        underlineButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(underlineButton);

        ItalicButton.setText("Italic");
        ItalicButton.setFocusable(false);
        ItalicButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ItalicButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(ItalicButton);

        fontSizeButton.setText("fontSize16");
        fontSizeButton.setFocusable(false);
        fontSizeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fontSizeButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(fontSizeButton);

        justifyButton.setText("Justify");
        justifyButton.setFocusable(false);
        justifyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        justifyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(justifyButton);

        fileButton.setText("From file");
        fileButton.setActionCommand("fileButton");
        fileButton.setFocusable(false);
        fileButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fileButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(fileButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 17;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(jToolBar1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        getContentPane().add(jPanel1, gridBagConstraints);

        toTextField.setText("eleganinfo@gmail.com");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(toTextField, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MailSender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MailSender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MailSender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MailSender.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MailSender().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public com.inder.customcomponents.CustomButton ItalicButton;
    public com.inder.customcomponents.CustomButton bccHelp;
    public com.inder.customcomponents.IEmailTextField bccTextField;
    public com.inder.customcomponents.CustomButton boldButton;
    public com.inder.customcomponents.CustomButton cancelEmail;
    public com.inder.customcomponents.CustomButton ccHelp;
    public com.inder.customcomponents.IEmailTextField ccTextField;
    public com.inder.customcomponents.CustomButton copyButton;
    public com.inder.customcomponents.CustomButton cutButton;
    public javax.swing.JLabel errorLabel;
    public com.inder.customcomponents.CustomButton fileButton;
    public com.inder.customcomponents.CustomButton fontSizeButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    public com.inder.customcomponents.CustomButton justifyButton;
    public javax.swing.JEditorPane messageEditorPane;
    public com.inder.customcomponents.CustomButton pasteButton;
    public com.inder.customcomponents.CustomButton sendEmail;
    public com.inder.customcomponents.ITextField subTextField;
    public com.inder.customcomponents.CustomButton toHelp;
    public com.inder.customcomponents.IEmailTextField toTextField;
    public com.inder.customcomponents.CustomButton underlineButton;
    // End of variables declaration//GEN-END:variables
}
